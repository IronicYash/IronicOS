name: Build IronicOS ISO

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bison flex libgmp3-dev libmpc-dev libmpfr-dev texinfo grub-pc-bin xorriso qemu-system-x86 nasm wget

      - name: Build and Install Cross Compiler (C or C++)
        run: |
          set -e

          # ===== Configuration =====
          GCC_VERSION=13.2.0
          TARGET=i686-elf
          PREFIX="$HOME/opt/cross"
          BUILD_CXX=false   # Change to 'true' for C++ support

          mkdir -p gcc-build
          cd gcc-build

          if [ "$BUILD_CXX" = true ]; then
            LANGS="c,c++"
          else
            LANGS="c"
          fi

          # Download GCC if not already present
          if [ ! -d "../gcc-$GCC_VERSION" ]; then
            wget https://ftp.gnu.org/gnu/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.gz
            tar -xf gcc-$GCC_VERSION.tar.gz -C ..
          fi

          ../gcc-$GCC_VERSION/configure \
            --target=$TARGET \
            --prefix="$PREFIX" \
            --disable-nls \
            --enable-languages=$LANGS \
            --without-headers

          make all-gcc
          make all-target-libgcc
          make install-gcc
          make install-target-libgcc

          if [ "$BUILD_CXX" = true ]; then
            make all-target-libstdc++-v3
            make install-target-libstdc++-v3
          fi

          echo "$PREFIX/bin" >> $GITHUB_PATH

      - name: Build ISO
        run: |
          make clean
          make iso

      - name: Show ISO file
        run: ls -lh build/*.iso

      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: IronicOS-ISO
          path: build/*.iso